// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model FaqSource {
  id          String       @id @default(cuid())
  name        String
  url         String
  type        String
  description String?
  metadata    Json?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  
  sections    FaqSection[]
  items       FaqItem[]
  
  @@index([type])
  @@map("faq_sources")
}

model FaqSection {
  id          String    @id @default(cuid())
  sourceId    String?
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  source      FaqSource? @relation(fields: [sourceId], references: [id], onDelete: Cascade)
  items       FaqItem[]
  
  @@index([sourceId])
  @@map("faq_sections")
}

model FaqItem {
  id          String      @id @default(cuid())
  sourceId    String?
  sectionId   String?
  question    String      @db.Text
  answers     String[]
  metadata    Json?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  source      FaqSource?  @relation(fields: [sourceId], references: [id], onDelete: Cascade)
  section     FaqSection? @relation(fields: [sectionId], references: [id], onDelete: SetNull)
  
  @@index([sourceId])
  @@index([sectionId])
  @@index([question(ops: raw("gin_trgm_ops"))], type: Gin)
  @@map("faq_items")
}
